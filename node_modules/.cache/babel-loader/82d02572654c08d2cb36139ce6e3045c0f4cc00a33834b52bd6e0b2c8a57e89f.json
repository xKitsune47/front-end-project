{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kitsune\\\\dev\\\\projekt-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport \"./styles/Global.css\";\nimport \"./styles/Computer.css\";\nimport \"./styles/Mobile.css\";\n// import Placeholder from \"./components/Placeholder\";\nimport Footer from \"./components/Footer\";\nimport Homepage from \"./pages/Homepage\";\nimport Favourites from \"./pages/Favourites\";\nimport Forecast from \"./pages/Forecast\";\nimport API_KEY from \"./API_KEY\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  document.title = \"NR 51012\";\n  const [saved, setSaved] = useState(JSON.parse(localStorage.getItem(\"fav_cities\")));\n  const [citiesState, setCitiesState] = useState([...saved]);\n  const [imperial, setImperial] = useState(JSON.parse(localStorage.getItem(\"imperial\")));\n\n  // removing city from citiesState state\n  function removeCity(elem) {\n    return citiesState.filter(ct => ct !== elem);\n  }\n  function handleSearchCity(e) {\n    e.preventDefault();\n    let term = e.target.firstChild.value;\n    term = term[0].toUpperCase() + term.substring(1);\n    setCitiesState([...citiesState, term]);\n    e.target.firstChild.value = \"\";\n  }\n\n  // city removal and addition to favs\n  function handleCity(elem) {\n    if (citiesState.includes(elem) && saved.includes(elem)) {\n      // removes city from localStorage\n      const removedCities = removeCity(elem);\n      localStorage.setItem(\"fav_cities\", JSON.stringify(removedCities));\n      setSaved(removedCities);\n    }\n    if (!saved.includes(elem)) {\n      // adds city to localStorage\n      const addCity = [...JSON.parse(localStorage.getItem(\"fav_cities\")), elem];\n      localStorage.setItem(\"fav_cities\", JSON.stringify(addCity));\n      setSaved(addCity);\n    }\n  }\n\n  // city removal from favs\n  function handleDelete(elem) {\n    if (saved.includes(elem)) {\n      const removeFav = saved.filter(ct => ct !== elem);\n      localStorage.setItem(\"fav_cities\", JSON.stringify(removeFav));\n    }\n    setSaved(JSON.parse(localStorage.getItem(\"fav_cities\")));\n  }\n\n  // if executed: changes temp unit C <-> F\n  function handleImperialChange() {\n    setImperial(!imperial);\n    localStorage.setItem(\"imperial\", JSON.stringify(!imperial));\n  }\n\n  // checks if the localStorage data is present, if not creates it\n  useEffect(function () {\n    // placeholder city\n    const initialCities = JSON.stringify([\"Legnica\", \"Wrocław\", \"Opole\", \"Tokyo\", \"Berlin\"]);\n\n    // if saved cities list is empty, place in a list of placeholder cities\n    JSON.parse(localStorage.getItem(\"fav_cities\")).length === 0 && localStorage.setItem(\"fav_cities\", initialCities);\n\n    // if temperature unit is null, create bool state\n    JSON.parse(localStorage.getItem(\"imperial\")) === null && localStorage.setItem(\"imperial\", false);\n\n    // clear list from empty citiesState elements\n    setCitiesState(removeCity(\"\"));\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const [suggestions, setSuggestions] = useState([]);\n  useEffect(function () {\n    async function nazwa(params = \"wro\") {\n      try {\n        const response = await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${params}&limit=5&appid=${API_KEY()}`);\n        if (!response.ok) {\n          throw new Error(\"Błąd pobierania sugestii\");\n        }\n        const data = await response.json();\n        const formattedSuggestions = data.map(city => ({\n          name: city.name,\n          country: city.country,\n          state: city.state,\n          lat: city.lat,\n          lon: city.lon\n        }));\n        setSuggestions(formattedSuggestions);\n      } catch (err) {\n        console.error(\"Błąd:\", err);\n        setSuggestions([]);\n      }\n    }\n  }, []);\n  console.log(suggestions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/prognoza\",\n          element: /*#__PURE__*/_jsxDEV(Forecast, {\n            cities: citiesState,\n            onClick: handleCity,\n            imperial: imperial,\n            onCityLookup: handleSearchCity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/ulubione-miasta\",\n          element: /*#__PURE__*/_jsxDEV(Favourites, {\n            cities: saved,\n            onDelete: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      onImperialChange: handleImperialChange,\n      imperial: imperial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"69d35NqG8o+7T0zTWcs+h3KX6i4=\");\n_c = App;\nexport default App;\n\n// TODO\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","useEffect","useState","Footer","Homepage","Favourites","Forecast","API_KEY","jsxDEV","_jsxDEV","App","_s","document","title","saved","setSaved","JSON","parse","localStorage","getItem","citiesState","setCitiesState","imperial","setImperial","removeCity","elem","filter","ct","handleSearchCity","e","preventDefault","term","target","firstChild","value","toUpperCase","substring","handleCity","includes","removedCities","setItem","stringify","addCity","handleDelete","removeFav","handleImperialChange","initialCities","length","suggestions","setSuggestions","nazwa","params","response","fetch","ok","Error","data","json","formattedSuggestions","map","city","name","country","state","lat","lon","err","console","error","log","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","cities","onClick","onCityLookup","onDelete","onImperialChange","_c","$RefreshReg$"],"sources":["C:/Users/Kitsune/dev/projekt-frontend/src/App.js"],"sourcesContent":["import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nimport \"./styles/Global.css\";\nimport \"./styles/Computer.css\";\nimport \"./styles/Mobile.css\";\n// import Placeholder from \"./components/Placeholder\";\nimport Footer from \"./components/Footer\";\nimport Homepage from \"./pages/Homepage\";\nimport Favourites from \"./pages/Favourites\";\nimport Forecast from \"./pages/Forecast\";\nimport API_KEY from \"./API_KEY\";\n\nfunction App() {\n    document.title = \"NR 51012\";\n\n    const [saved, setSaved] = useState(\n        JSON.parse(localStorage.getItem(\"fav_cities\"))\n    );\n    const [citiesState, setCitiesState] = useState([...saved]);\n    const [imperial, setImperial] = useState(\n        JSON.parse(localStorage.getItem(\"imperial\"))\n    );\n\n    // removing city from citiesState state\n    function removeCity(elem) {\n        return citiesState.filter((ct) => ct !== elem);\n    }\n\n    function handleSearchCity(e) {\n        e.preventDefault();\n\n        let term = e.target.firstChild.value;\n        term = term[0].toUpperCase() + term.substring(1);\n\n        setCitiesState([...citiesState, term]);\n        e.target.firstChild.value = \"\";\n    }\n\n    // city removal and addition to favs\n    function handleCity(elem) {\n        if (citiesState.includes(elem) && saved.includes(elem)) {\n            // removes city from localStorage\n            const removedCities = removeCity(elem);\n\n            localStorage.setItem(\"fav_cities\", JSON.stringify(removedCities));\n            setSaved(removedCities);\n        }\n        if (!saved.includes(elem)) {\n            // adds city to localStorage\n            const addCity = [\n                ...JSON.parse(localStorage.getItem(\"fav_cities\")),\n                elem,\n            ];\n\n            localStorage.setItem(\"fav_cities\", JSON.stringify(addCity));\n            setSaved(addCity);\n        }\n    }\n\n    // city removal from favs\n    function handleDelete(elem) {\n        if (saved.includes(elem)) {\n            const removeFav = saved.filter((ct) => ct !== elem);\n\n            localStorage.setItem(\"fav_cities\", JSON.stringify(removeFav));\n        }\n        setSaved(JSON.parse(localStorage.getItem(\"fav_cities\")));\n    }\n\n    // if executed: changes temp unit C <-> F\n    function handleImperialChange() {\n        setImperial(!imperial);\n        localStorage.setItem(\"imperial\", JSON.stringify(!imperial));\n    }\n\n    // checks if the localStorage data is present, if not creates it\n    useEffect(function () {\n        // placeholder city\n        const initialCities = JSON.stringify([\n            \"Legnica\",\n            \"Wrocław\",\n            \"Opole\",\n            \"Tokyo\",\n            \"Berlin\",\n        ]);\n\n        // if saved cities list is empty, place in a list of placeholder cities\n        JSON.parse(localStorage.getItem(\"fav_cities\")).length === 0 &&\n            localStorage.setItem(\"fav_cities\", initialCities);\n\n        // if temperature unit is null, create bool state\n        JSON.parse(localStorage.getItem(\"imperial\")) === null &&\n            localStorage.setItem(\"imperial\", false);\n\n        // clear list from empty citiesState elements\n        setCitiesState(removeCity(\"\"));\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const [suggestions, setSuggestions] = useState([]);\n    useEffect(function () {\n        async function nazwa(params = \"wro\") {\n            try {\n                const response = await fetch(\n                    `https://api.openweathermap.org/geo/1.0/direct?q=${params}&limit=5&appid=${API_KEY()}`\n                );\n\n                if (!response.ok) {\n                    throw new Error(\"Błąd pobierania sugestii\");\n                }\n\n                const data = await response.json();\n                const formattedSuggestions = data.map((city) => ({\n                    name: city.name,\n                    country: city.country,\n                    state: city.state,\n                    lat: city.lat,\n                    lon: city.lon,\n                }));\n\n                setSuggestions(formattedSuggestions);\n            } catch (err) {\n                console.error(\"Błąd:\", err);\n                setSuggestions([]);\n            }\n        }\n    }, []);\n\n    console.log(suggestions);\n\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Routes>\n                    <Route path=\"/\" element={<Homepage />} />\n                    <Route\n                        path=\"/prognoza\"\n                        element={\n                            <Forecast\n                                cities={citiesState}\n                                onClick={handleCity}\n                                imperial={imperial}\n                                onCityLookup={handleSearchCity}\n                            />\n                        }\n                    />\n                    <Route\n                        path=\"/ulubione-miasta\"\n                        element={\n                            <Favourites\n                                cities={saved}\n                                onDelete={handleDelete}\n                            />\n                        }\n                    />\n                </Routes>\n            </BrowserRouter>\n            <Footer\n                onImperialChange={handleImperialChange}\n                imperial={imperial}\n            />\n        </div>\n    );\n}\n\nexport default App;\n\n// TODO\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}