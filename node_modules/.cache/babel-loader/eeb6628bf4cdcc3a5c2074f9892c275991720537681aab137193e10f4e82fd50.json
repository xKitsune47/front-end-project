{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kitsune\\\\dev\\\\projekt-frontend\\\\src\\\\contexts\\\\ImperialContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImperialContext = /*#__PURE__*/createContext();\nfunction ImperialProvider({\n  children\n}) {\n  _s();\n  const [imperial, setImperial] = useState(getLocalStorageItem(\"imperial\", false));\n  return /*#__PURE__*/_jsxDEV(ImperialContext.Provider, {\n    value: {\n      imperial\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_s(ImperialProvider, \"eE7Q9xLQwUemlyw6kcO2jhqSsig=\");\n_c = ImperialProvider;\nfunction useImperial() {\n  _s2();\n  const context = useContext(ImperialProvider);\n  if (context === undefined) {\n    throw new Error(\"ImperialContext użyte poza ImperialProvider\");\n  }\n  return context;\n}\n_s2(useImperial, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport { ImperialProvider, useImperial };\nvar _c;\n$RefreshReg$(_c, \"ImperialProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","ImperialContext","ImperialProvider","children","_s","imperial","setImperial","getLocalStorageItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useImperial","_s2","context","undefined","Error","$RefreshReg$"],"sources":["C:/Users/Kitsune/dev/projekt-frontend/src/contexts/ImperialContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nconst ImperialContext = createContext();\r\n\r\nfunction ImperialProvider({ children }) {\r\n    const [imperial, setImperial] = useState(\r\n        getLocalStorageItem(\"imperial\", false)\r\n    );\r\n\r\n    return (\r\n        <ImperialContext.Provider value={{ imperial }}>\r\n            {children}\r\n        </ImperialContext.Provider>\r\n    );\r\n}\r\n\r\nfunction useImperial() {\r\n    const context = useContext(ImperialProvider);\r\n    if (context === undefined) {\r\n        throw new Error(\"ImperialContext użyte poza ImperialProvider\");\r\n    }\r\n\r\n    return context;\r\n}\r\n\r\nexport { ImperialProvider, useImperial };\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;AAEvC,SAASM,gBAAgBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CACpCS,mBAAmB,CAAC,UAAU,EAAE,KAAK,CACzC,CAAC;EAED,oBACIP,OAAA,CAACC,eAAe,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEJ;IAAS,CAAE;IAAAF,QAAA,EACzCA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEnC;AAACT,EAAA,CAVQF,gBAAgB;AAAAY,EAAA,GAAhBZ,gBAAgB;AAYzB,SAASa,WAAWA,CAAA,EAAG;EAAAC,GAAA;EACnB,MAAMC,OAAO,GAAGpB,UAAU,CAACK,gBAAgB,CAAC;EAC5C,IAAIe,OAAO,KAAKC,SAAS,EAAE;IACvB,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAClE;EAEA,OAAOF,OAAO;AAClB;AAACD,GAAA,CAPQD,WAAW;AASpB,SAASb,gBAAgB,EAAEa,WAAW;AAAG,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}