{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kitsune\\\\dev\\\\projekt-frontend\\\\src\\\\pages\\\\Forecast.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport CityDetails from \"../components/CityDetails\";\nimport Header from \"../components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Forecast({\n  children,\n  cities\n}) {\n  _s();\n  const [citiesState, setCitiesState] = useState(cities);\n  function handleCity(elem) {\n    console.log(elem);\n    if (cities.includes(elem)) {\n      console.log(\"includes\");\n      setCitiesState(citiesState.filter(cty => cty !== elem));\n      localStorage.setItem(\"fav_cities\", JSON.stringify(citiesState.filter(ct => ct !== elem)));\n    } else if (!cities.includes(elem)) {\n      console.log(\"not includes\");\n      setCitiesState([...JSON.parse(localStorage.getItem(\"fav_cities\")), elem]);\n      localStorage.setItem(\"fav_cities\", JSON.stringify([...JSON.parse(localStorage.getItem(\"fav_cities\")), elem]));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-container\",\n      children: cities.map(city => {\n        return /*#__PURE__*/_jsxDEV(CityDetails, {\n          city: city,\n          cities: citiesState,\n          citiesState: citiesState,\n          onClick: handleCity\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Forecast, \"sVyhxvjz58uiAuSjjEHYdT4J9PU=\");\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["useState","CityDetails","Header","jsxDEV","_jsxDEV","Forecast","children","cities","_s","citiesState","setCitiesState","handleCity","elem","console","log","includes","filter","cty","localStorage","setItem","JSON","stringify","ct","parse","getItem","fileName","_jsxFileName","lineNumber","columnNumber","className","map","city","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Kitsune/dev/projekt-frontend/src/pages/Forecast.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport CityDetails from \"../components/CityDetails\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction Forecast({ children, cities }) {\r\n    const [citiesState, setCitiesState] = useState(cities);\r\n    function handleCity(elem) {\r\n        console.log(elem);\r\n        if (cities.includes(elem)) {\r\n            console.log(\"includes\");\r\n            setCitiesState(citiesState.filter((cty) => cty !== elem));\r\n            localStorage.setItem(\r\n                \"fav_cities\",\r\n                JSON.stringify(citiesState.filter((ct) => ct !== elem))\r\n            );\r\n        } else if (!cities.includes(elem)) {\r\n            console.log(\"not includes\");\r\n            setCitiesState([\r\n                ...JSON.parse(localStorage.getItem(\"fav_cities\")),\r\n                elem,\r\n            ]);\r\n            localStorage.setItem(\r\n                \"fav_cities\",\r\n                JSON.stringify([\r\n                    ...JSON.parse(localStorage.getItem(\"fav_cities\")),\r\n                    elem,\r\n                ])\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"forecast-container\">\r\n                {cities.map((city) => {\r\n                    return (\r\n                        <CityDetails\r\n                            city={city}\r\n                            cities={citiesState}\r\n                            key={city}\r\n                            citiesState={citiesState}\r\n                            onClick={handleCity}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Forecast;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,QAAQA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAACO,MAAM,CAAC;EACtD,SAASI,UAAUA,CAACC,IAAI,EAAE;IACtBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,IAAIL,MAAM,CAACQ,QAAQ,CAACH,IAAI,CAAC,EAAE;MACvBC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvBJ,cAAc,CAACD,WAAW,CAACO,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAKL,IAAI,CAAC,CAAC;MACzDM,YAAY,CAACC,OAAO,CAChB,YAAY,EACZC,IAAI,CAACC,SAAS,CAACZ,WAAW,CAACO,MAAM,CAAEM,EAAE,IAAKA,EAAE,KAAKV,IAAI,CAAC,CAC1D,CAAC;IACL,CAAC,MAAM,IAAI,CAACL,MAAM,CAACQ,QAAQ,CAACH,IAAI,CAAC,EAAE;MAC/BC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3BJ,cAAc,CAAC,CACX,GAAGU,IAAI,CAACG,KAAK,CAACL,YAAY,CAACM,OAAO,CAAC,YAAY,CAAC,CAAC,EACjDZ,IAAI,CACP,CAAC;MACFM,YAAY,CAACC,OAAO,CAChB,YAAY,EACZC,IAAI,CAACC,SAAS,CAAC,CACX,GAAGD,IAAI,CAACG,KAAK,CAACL,YAAY,CAACM,OAAO,CAAC,YAAY,CAAC,CAAC,EACjDZ,IAAI,CACP,CACL,CAAC;IACL;EACJ;EAEA,oBACIR,OAAA;IAAAE,QAAA,gBACIF,OAAA,CAACF,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVxB,OAAA;MAAKyB,SAAS,EAAC,oBAAoB;MAAAvB,QAAA,EAC9BC,MAAM,CAACuB,GAAG,CAAEC,IAAI,IAAK;QAClB,oBACI3B,OAAA,CAACH,WAAW;UACR8B,IAAI,EAAEA,IAAK;UACXxB,MAAM,EAAEE,WAAY;UAEpBA,WAAW,EAAEA,WAAY;UACzBuB,OAAO,EAAErB;QAAW,GAFfoB,IAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGZ,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACpB,EAAA,CA7CQH,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA+CjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}