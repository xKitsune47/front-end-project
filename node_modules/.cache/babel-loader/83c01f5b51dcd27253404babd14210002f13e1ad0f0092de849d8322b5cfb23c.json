{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kitsune\\\\dev\\\\projekt-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport \"./styles/Global.css\";\nimport \"./styles/Computer.css\";\nimport \"./styles/Mobile.css\";\nimport Footer from \"./components/Footer\";\nimport Homepage from \"./pages/Homepage\";\nimport Favourites from \"./pages/Favourites\";\nimport Forecast from \"./pages/Forecast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  document.title = \"NR 51012\";\n\n  // placeholder/initial values\n  const initialCities = [\"Legnica\", \"Wrocław\", \"Opole\", \"Tokyo\", \"Berlin\"];\n\n  // fetching data from localStorage\n  const getLocalStorageItem = (key, defaultValue) => {\n    const item = localStorage.getItem(key);\n    if (item === null) {\n      localStorage.setItem(key, JSON.stringify(defaultValue));\n      return defaultValue;\n    }\n    return JSON.parse(item);\n  };\n  const [saved, setSaved] = useState(getLocalStorageItem(\"fav_cities\", initialCities));\n  const [citiesState, setCitiesState] = useState([...saved]);\n  const [imperial, setImperial] = useState(getLocalStorageItem(\"imperial\", false));\n\n  // removing city form cities state\n  function removeCity(elem) {\n    return citiesState.filter(ct => ct !== elem);\n  }\n\n  // city lookup\n  function handleSearchCity(e) {\n    e.preventDefault();\n    let term = e.target.firstChild.value;\n    term = term[0].toUpperCase() + term.substring(1);\n    setCitiesState([...citiesState, term]);\n    e.target.firstChild.value = \"\";\n  }\n\n  // addition/removal city to/from favourites\n  function handleCity(elem) {\n    if (citiesState.includes(elem) && saved.includes(elem)) {\n      // removing city from localStorage\n      const removedCities = removeCity(elem);\n      localStorage.setItem(\"fav_cities\", JSON.stringify(removedCities));\n      setSaved(removedCities);\n    }\n    if (!saved.includes(elem)) {\n      // adding city to localStorage\n      const addCity = [...saved, elem];\n      localStorage.setItem(\"fav_cities\", JSON.stringify(addCity));\n      setSaved(addCity);\n    }\n  }\n\n  // removing city from favs\n  function handleDelete(elem) {\n    if (saved.includes(elem)) {\n      const removeFav = saved.filter(ct => ct !== elem);\n      localStorage.setItem(\"fav_cities\", JSON.stringify(removeFav));\n      setSaved(removeFav);\n    }\n  }\n\n  // change temp type\n  function handleImperialChange() {\n    const newImperial = !imperial;\n    setImperial(newImperial);\n    localStorage.setItem(\"imperial\", JSON.stringify(newImperial));\n  }\n\n  // clearing the list from empty list elements\n  useEffect(() => {\n    setCitiesState(removeCity(\"\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/prognoza\",\n        element: /*#__PURE__*/_jsxDEV(Forecast, {\n          cities: citiesState,\n          onClick: handleCity,\n          imperial: imperial,\n          onCityLookup: handleSearchCity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/ulubione-miasta\",\n        element: /*#__PURE__*/_jsxDEV(Favourites, {\n          cities: saved,\n          onDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      onImperialChange: handleImperialChange,\n      imperial: imperial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this)\n  // <Footer\n  //     onImperialChange={handleImperialChange}\n  //     imperial={imperial}\n  // />\n  ;\n}\n_s(App, \"Oye8HUI5J3sTppy+bKG6+4CHKm4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","useEffect","useState","Footer","Homepage","Favourites","Forecast","jsxDEV","_jsxDEV","App","_s","document","title","initialCities","getLocalStorageItem","key","defaultValue","item","localStorage","getItem","setItem","JSON","stringify","parse","saved","setSaved","citiesState","setCitiesState","imperial","setImperial","removeCity","elem","filter","ct","handleSearchCity","e","preventDefault","term","target","firstChild","value","toUpperCase","substring","handleCity","includes","removedCities","addCity","handleDelete","removeFav","handleImperialChange","newImperial","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","cities","onClick","onCityLookup","onDelete","onImperialChange","_c","$RefreshReg$"],"sources":["C:/Users/Kitsune/dev/projekt-frontend/src/App.js"],"sourcesContent":["import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport \"./styles/Global.css\";\r\nimport \"./styles/Computer.css\";\r\nimport \"./styles/Mobile.css\";\r\nimport Footer from \"./components/Footer\";\r\nimport Homepage from \"./pages/Homepage\";\r\nimport Favourites from \"./pages/Favourites\";\r\nimport Forecast from \"./pages/Forecast\";\r\n\r\nfunction App() {\r\n    document.title = \"NR 51012\";\r\n\r\n    // placeholder/initial values\r\n    const initialCities = [\"Legnica\", \"Wrocław\", \"Opole\", \"Tokyo\", \"Berlin\"];\r\n\r\n    // fetching data from localStorage\r\n    const getLocalStorageItem = (key, defaultValue) => {\r\n        const item = localStorage.getItem(key);\r\n        if (item === null) {\r\n            localStorage.setItem(key, JSON.stringify(defaultValue));\r\n            return defaultValue;\r\n        }\r\n        return JSON.parse(item);\r\n    };\r\n\r\n    const [saved, setSaved] = useState(\r\n        getLocalStorageItem(\"fav_cities\", initialCities)\r\n    );\r\n\r\n    const [citiesState, setCitiesState] = useState([...saved]);\r\n    const [imperial, setImperial] = useState(\r\n        getLocalStorageItem(\"imperial\", false)\r\n    );\r\n\r\n    // removing city form cities state\r\n    function removeCity(elem) {\r\n        return citiesState.filter((ct) => ct !== elem);\r\n    }\r\n\r\n    // city lookup\r\n    function handleSearchCity(e) {\r\n        e.preventDefault();\r\n        let term = e.target.firstChild.value;\r\n        term = term[0].toUpperCase() + term.substring(1);\r\n        setCitiesState([...citiesState, term]);\r\n        e.target.firstChild.value = \"\";\r\n    }\r\n\r\n    // addition/removal city to/from favourites\r\n    function handleCity(elem) {\r\n        if (citiesState.includes(elem) && saved.includes(elem)) {\r\n            // removing city from localStorage\r\n            const removedCities = removeCity(elem);\r\n            localStorage.setItem(\"fav_cities\", JSON.stringify(removedCities));\r\n            setSaved(removedCities);\r\n        }\r\n        if (!saved.includes(elem)) {\r\n            // adding city to localStorage\r\n            const addCity = [...saved, elem];\r\n            localStorage.setItem(\"fav_cities\", JSON.stringify(addCity));\r\n            setSaved(addCity);\r\n        }\r\n    }\r\n\r\n    // removing city from favs\r\n    function handleDelete(elem) {\r\n        if (saved.includes(elem)) {\r\n            const removeFav = saved.filter((ct) => ct !== elem);\r\n            localStorage.setItem(\"fav_cities\", JSON.stringify(removeFav));\r\n            setSaved(removeFav);\r\n        }\r\n    }\r\n\r\n    // change temp type\r\n    function handleImperialChange() {\r\n        const newImperial = !imperial;\r\n        setImperial(newImperial);\r\n        localStorage.setItem(\"imperial\", JSON.stringify(newImperial));\r\n    }\r\n\r\n    // clearing the list from empty list elements\r\n    useEffect(() => {\r\n        setCitiesState(removeCity(\"\"));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Homepage />} />\r\n                <Route\r\n                    path=\"/prognoza\"\r\n                    element={\r\n                        <Forecast\r\n                            cities={citiesState}\r\n                            onClick={handleCity}\r\n                            imperial={imperial}\r\n                            onCityLookup={handleSearchCity}\r\n                        />\r\n                    }\r\n                />\r\n                <Route\r\n                    path=\"/ulubione-miasta\"\r\n                    element={\r\n                        <Favourites cities={saved} onDelete={handleDelete} />\r\n                    }\r\n                />\r\n            </Routes>\r\n            <Footer\r\n                onImperialChange={handleImperialChange}\r\n                imperial={imperial}\r\n            />\r\n        </BrowserRouter>\r\n        // <Footer\r\n        //     onImperialChange={handleImperialChange}\r\n        //     imperial={imperial}\r\n        // />\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}