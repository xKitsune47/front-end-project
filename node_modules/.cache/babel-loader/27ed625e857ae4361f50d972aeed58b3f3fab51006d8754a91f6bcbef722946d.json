{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kitsune\\\\dev\\\\projekt-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport \"./styles/Global.css\";\nimport \"./styles/Computer.css\";\nimport \"./styles/Mobile.css\";\n// import Placeholder from \"./components/Placeholder\";\nimport Footer from \"./components/Footer\";\nimport Homepage from \"./pages/Homepage\";\nimport Favourites from \"./pages/Favourites\";\nimport Forecast from \"./pages/Forecast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  document.title = \"NR 51012\";\n  const saved = JSON.parse(localStorage.getItem(\"fav_cities\"));\n  const [lookup, setLookup] = useState(\"\");\n  const [citiesState, setCitiesState] = useState([...saved, lookup]);\n  const [imperial, setImperial] = useState(JSON.parse(localStorage.getItem(\"imperial\")));\n  function handleSearchCity(e) {\n    console.log(e);\n    setLookup(\"\");\n  }\n\n  // city removal and addition in \"Forecast\" tab\n  function handleCity(elem) {\n    if (citiesState.includes(elem)) {\n      // removes city from localStorage\n      const removeCity = citiesState.filter(ct => ct !== elem);\n      setCitiesState(removeCity);\n      localStorage.setItem(\"fav_cities\", JSON.stringify(removeCity));\n    } else if (!citiesState.includes(elem)) {\n      // adds city to localStorage\n      const addCity = [...JSON.parse(localStorage.getItem(\"fav_cities\")), elem];\n      localStorage.setItem(\"fav_cities\", JSON.stringify(addCity));\n    }\n  }\n\n  // city removal from \"Favourites\" tab\n  function handleDelete(elem) {\n    if (saved.includes(elem)) {\n      const removeFav = saved.filter(ct => ct !== elem);\n      localStorage.setItem(\"fav_cities\", JSON.stringify(removeFav));\n    }\n  }\n\n  // if ran: changes temp unit C <-> F\n  function handleImperialChange() {\n    setImperial(!imperial);\n    localStorage.setItem(\"imperial\", JSON.stringify(!imperial));\n  }\n\n  // checks if the localStorage data is present, if not creates it\n  useEffect(function () {\n    // placeholder cities\n    const initialCities = JSON.stringify([\"Legnica\"\n    // \"Wrocław\",\n    // \"Poznań\",\n    // \"Opole\",\n    // \"Zielona Góra\",\n    ]);\n    // if saved cities list is empty, place in a list of placeholder cities\n    JSON.parse(localStorage.getItem(\"fav_cities\")).length === 0 && localStorage.setItem(\"fav_cities\", initialCities);\n\n    // if temperature unit is null, create bool state\n    JSON.parse(localStorage.getItem(\"imperial\")) === null && localStorage.setItem(\"imperial\", false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/prognoza\",\n          element: /*#__PURE__*/_jsxDEV(Forecast, {\n            cities: citiesState,\n            onClick: handleCity,\n            imperial: imperial\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/ulubione-miasta\",\n          element: /*#__PURE__*/_jsxDEV(Favourites, {\n            cities: citiesState,\n            onDelete: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      onImperialChange: handleImperialChange,\n      imperial: imperial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"GNt/zH8o+KAg09WAqopFzT2IhJI=\");\n_c = App;\nexport default App;\n\n// TODO\n// zrobic formularz do dodawania miast, przerobic wyswietlane miasta tak\n// aby mozna bylo dodac miasto z formularza, ktore bazowo jest NIEDODANE\n// do ulubionych i trzeba dodac, w innym wypadku po reloadzie strony\n// miasto to nie bedzie sie wyswietlac\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","useEffect","useState","Footer","Homepage","Favourites","Forecast","jsxDEV","_jsxDEV","App","_s","document","title","saved","JSON","parse","localStorage","getItem","lookup","setLookup","citiesState","setCitiesState","imperial","setImperial","handleSearchCity","e","console","log","handleCity","elem","includes","removeCity","filter","ct","setItem","stringify","addCity","handleDelete","removeFav","handleImperialChange","initialCities","length","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","cities","onClick","onDelete","onImperialChange","_c","$RefreshReg$"],"sources":["C:/Users/Kitsune/dev/projekt-frontend/src/App.js"],"sourcesContent":["import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nimport \"./styles/Global.css\";\nimport \"./styles/Computer.css\";\nimport \"./styles/Mobile.css\";\n// import Placeholder from \"./components/Placeholder\";\nimport Footer from \"./components/Footer\";\nimport Homepage from \"./pages/Homepage\";\nimport Favourites from \"./pages/Favourites\";\nimport Forecast from \"./pages/Forecast\";\n\nfunction App() {\n    document.title = \"NR 51012\";\n\n    const saved = JSON.parse(localStorage.getItem(\"fav_cities\"));\n    const [lookup, setLookup] = useState(\"\");\n    const [citiesState, setCitiesState] = useState([...saved, lookup]);\n    const [imperial, setImperial] = useState(\n        JSON.parse(localStorage.getItem(\"imperial\"))\n    );\n\n    function handleSearchCity(e) {\n        console.log(e);\n        setLookup(\"\");\n    }\n\n    // city removal and addition in \"Forecast\" tab\n    function handleCity(elem) {\n        if (citiesState.includes(elem)) {\n            // removes city from localStorage\n            const removeCity = citiesState.filter((ct) => ct !== elem);\n            setCitiesState(removeCity);\n            localStorage.setItem(\"fav_cities\", JSON.stringify(removeCity));\n        } else if (!citiesState.includes(elem)) {\n            // adds city to localStorage\n            const addCity = [\n                ...JSON.parse(localStorage.getItem(\"fav_cities\")),\n                elem,\n            ];\n            localStorage.setItem(\"fav_cities\", JSON.stringify(addCity));\n        }\n    }\n\n    // city removal from \"Favourites\" tab\n    function handleDelete(elem) {\n        if (saved.includes(elem)) {\n            const removeFav = saved.filter((ct) => ct !== elem);\n            localStorage.setItem(\"fav_cities\", JSON.stringify(removeFav));\n        }\n    }\n\n    // if ran: changes temp unit C <-> F\n    function handleImperialChange() {\n        setImperial(!imperial);\n        localStorage.setItem(\"imperial\", JSON.stringify(!imperial));\n    }\n\n    // checks if the localStorage data is present, if not creates it\n    useEffect(function () {\n        // placeholder cities\n        const initialCities = JSON.stringify([\n            \"Legnica\",\n            // \"Wrocław\",\n            // \"Poznań\",\n            // \"Opole\",\n            // \"Zielona Góra\",\n        ]);\n        // if saved cities list is empty, place in a list of placeholder cities\n        JSON.parse(localStorage.getItem(\"fav_cities\")).length === 0 &&\n            localStorage.setItem(\"fav_cities\", initialCities);\n\n        // if temperature unit is null, create bool state\n        JSON.parse(localStorage.getItem(\"imperial\")) === null &&\n            localStorage.setItem(\"imperial\", false);\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Routes>\n                    <Route path=\"/\" element={<Homepage />} />\n                    <Route\n                        path=\"/prognoza\"\n                        element={\n                            <Forecast\n                                cities={citiesState}\n                                onClick={handleCity}\n                                imperial={imperial}\n                            />\n                        }\n                    />\n                    <Route\n                        path=\"/ulubione-miasta\"\n                        element={\n                            <Favourites\n                                cities={citiesState}\n                                onDelete={handleDelete}\n                            />\n                        }\n                    />\n                </Routes>\n            </BrowserRouter>\n            <Footer\n                onImperialChange={handleImperialChange}\n                imperial={imperial}\n            />\n        </div>\n    );\n}\n\nexport default App;\n\n// TODO\n// zrobic formularz do dodawania miast, przerobic wyswietlane miasta tak\n// aby mozna bylo dodac miasto z formularza, ktore bazowo jest NIEDODANE\n// do ulubionych i trzeba dodac, w innym wypadku po reloadzie strony\n// miasto to nie bedzie sie wyswietlac\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}