{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kitsune\\\\dev\\\\projekt-frontend\\\\src\\\\App.js\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport \"./styles/Global.css\";\nimport \"./styles/Computer.css\";\nimport \"./styles/Mobile.css\";\nimport Footer from \"./components/Footer\";\nimport Homepage from \"./pages/Homepage\";\nimport Favourites from \"./pages/Favourites\";\nimport Forecast from \"./pages/Forecast\";\nimport { ForecastProvider, useForecast } from \"./contexts/ForecastContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  document.title = \"NR 51012\";\n\n  // // placeholder/initial values\n  // const initialCities = [\"Legnica\", \"Wrocław\", \"Opole\", \"Tokyo\", \"Berlin\"];\n\n  // // fetching data from localStorage\n  // const getLocalStorageItem = (key, defaultValue) => {\n  //     const item = localStorage.getItem(key);\n  //     if (item === null) {\n  //         localStorage.setItem(key, JSON.stringify(defaultValue));\n  //         return defaultValue;\n  //     }\n  //     return JSON.parse(item);\n  // };\n\n  // const [saved, setSaved] = useState(\n  //     getLocalStorageItem(\"fav_cities\", initialCities)\n  // );\n\n  // const [citiesState, setCitiesState] = useState([...saved]);\n  // const [imperial, setImperial] = useState(\n  //     getLocalStorageItem(\"imperial\", false)\n  // );\n\n  // // removing city form cities state\n  // function removeCity(elem) {\n  //     return citiesState.filter((ct) => ct !== elem);\n  // }\n\n  // // city lookup\n  // function handleSearchCity(e) {\n  //     e.preventDefault();\n  //     let term = e.target.firstChild.value;\n  //     term = term[0].toUpperCase() + term.substring(1);\n  //     setCitiesState([...citiesState, term]);\n  //     e.target.firstChild.value = \"\";\n  // }\n\n  // // addition/removal city to/from favourites\n  // function handleCity(elem) {\n  //     if (citiesState.includes(elem) && saved.includes(elem)) {\n  //         // removing city from localStorage\n  //         const removedCities = removeCity(elem);\n  //         localStorage.setItem(\"fav_cities\", JSON.stringify(removedCities));\n  //         setSaved(removedCities);\n  //     }\n  //     if (!saved.includes(elem)) {\n  //         // adding city to localStorage\n  //         const addCity = [...saved, elem];\n  //         localStorage.setItem(\"fav_cities\", JSON.stringify(addCity));\n  //         setSaved(addCity);\n  //     }\n  // }\n\n  // // removing city from favs\n  // function handleDelete(elem) {\n  //     if (saved.includes(elem)) {\n  //         const removeFav = saved.filter((ct) => ct !== elem);\n  //         localStorage.setItem(\"fav_cities\", JSON.stringify(removeFav));\n  //         setSaved(removeFav);\n  //     }\n  // }\n\n  // // clearing the list from empty list elements\n  // useEffect(() => {\n  //     setCitiesState(removeCity(\"\"));\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, []);\n\n  // const { citiesState, handleCity, handleSearchCity, saved, handleDelete } =\n  //     useForecast();\n\n  return /*#__PURE__*/_jsxDEV(ForecastProvider, {\n    children: [/*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/prognoza\",\n          element: /*#__PURE__*/_jsxDEV(Forecast, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/ulubione-miasta\",\n          element: /*#__PURE__*/_jsxDEV(Favourites, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","useEffect","useState","Footer","Homepage","Favourites","Forecast","ForecastProvider","useForecast","jsxDEV","_jsxDEV","App","document","title","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kitsune/dev/projekt-frontend/src/App.js"],"sourcesContent":["import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport \"./styles/Global.css\";\r\nimport \"./styles/Computer.css\";\r\nimport \"./styles/Mobile.css\";\r\nimport Footer from \"./components/Footer\";\r\nimport Homepage from \"./pages/Homepage\";\r\nimport Favourites from \"./pages/Favourites\";\r\nimport Forecast from \"./pages/Forecast\";\r\nimport { ForecastProvider, useForecast } from \"./contexts/ForecastContext\";\r\n\r\nfunction App() {\r\n    document.title = \"NR 51012\";\r\n\r\n    // // placeholder/initial values\r\n    // const initialCities = [\"Legnica\", \"Wrocław\", \"Opole\", \"Tokyo\", \"Berlin\"];\r\n\r\n    // // fetching data from localStorage\r\n    // const getLocalStorageItem = (key, defaultValue) => {\r\n    //     const item = localStorage.getItem(key);\r\n    //     if (item === null) {\r\n    //         localStorage.setItem(key, JSON.stringify(defaultValue));\r\n    //         return defaultValue;\r\n    //     }\r\n    //     return JSON.parse(item);\r\n    // };\r\n\r\n    // const [saved, setSaved] = useState(\r\n    //     getLocalStorageItem(\"fav_cities\", initialCities)\r\n    // );\r\n\r\n    // const [citiesState, setCitiesState] = useState([...saved]);\r\n    // const [imperial, setImperial] = useState(\r\n    //     getLocalStorageItem(\"imperial\", false)\r\n    // );\r\n\r\n    // // removing city form cities state\r\n    // function removeCity(elem) {\r\n    //     return citiesState.filter((ct) => ct !== elem);\r\n    // }\r\n\r\n    // // city lookup\r\n    // function handleSearchCity(e) {\r\n    //     e.preventDefault();\r\n    //     let term = e.target.firstChild.value;\r\n    //     term = term[0].toUpperCase() + term.substring(1);\r\n    //     setCitiesState([...citiesState, term]);\r\n    //     e.target.firstChild.value = \"\";\r\n    // }\r\n\r\n    // // addition/removal city to/from favourites\r\n    // function handleCity(elem) {\r\n    //     if (citiesState.includes(elem) && saved.includes(elem)) {\r\n    //         // removing city from localStorage\r\n    //         const removedCities = removeCity(elem);\r\n    //         localStorage.setItem(\"fav_cities\", JSON.stringify(removedCities));\r\n    //         setSaved(removedCities);\r\n    //     }\r\n    //     if (!saved.includes(elem)) {\r\n    //         // adding city to localStorage\r\n    //         const addCity = [...saved, elem];\r\n    //         localStorage.setItem(\"fav_cities\", JSON.stringify(addCity));\r\n    //         setSaved(addCity);\r\n    //     }\r\n    // }\r\n\r\n    // // removing city from favs\r\n    // function handleDelete(elem) {\r\n    //     if (saved.includes(elem)) {\r\n    //         const removeFav = saved.filter((ct) => ct !== elem);\r\n    //         localStorage.setItem(\"fav_cities\", JSON.stringify(removeFav));\r\n    //         setSaved(removeFav);\r\n    //     }\r\n    // }\r\n\r\n    // // clearing the list from empty list elements\r\n    // useEffect(() => {\r\n    //     setCitiesState(removeCity(\"\"));\r\n    //     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    // }, []);\r\n\r\n    // const { citiesState, handleCity, handleSearchCity, saved, handleDelete } =\r\n    //     useForecast();\r\n\r\n    return (\r\n        <ForecastProvider>\r\n            <BrowserRouter>\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Homepage />} />\r\n                    <Route path=\"/prognoza\" element={<Forecast />} />\r\n                    <Route path=\"/ulubione-miasta\" element={<Favourites />} />\r\n                </Routes>\r\n            </BrowserRouter>\r\n            <Footer />\r\n        </ForecastProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,SAASA,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,qBAAqB;AAC5B,OAAO,uBAAuB;AAC9B,OAAO,qBAAqB;AAC5B,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,gBAAgB,EAAEC,WAAW,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3E,SAASC,GAAGA,CAAA,EAAG;EACXC,QAAQ,CAACC,KAAK,GAAG,UAAU;;EAE3B;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,oBACIH,OAAA,CAACH,gBAAgB;IAAAO,QAAA,gBACbJ,OAAA,CAACZ,aAAa;MAAAgB,QAAA,eACVJ,OAAA,CAACX,MAAM;QAAAe,QAAA,gBACHJ,OAAA,CAACV,KAAK;UAACe,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEN,OAAA,CAACN,QAAQ;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzCV,OAAA,CAACV,KAAK;UAACe,IAAI,EAAC,WAAW;UAACC,OAAO,eAAEN,OAAA,CAACJ,QAAQ;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjDV,OAAA,CAACV,KAAK;UAACe,IAAI,EAAC,kBAAkB;UAACC,OAAO,eAAEN,OAAA,CAACL,UAAU;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAChBV,OAAA,CAACP,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAE3B;AAACC,EAAA,GArFQV,GAAG;AAuFZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}